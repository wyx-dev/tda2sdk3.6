<?xml version="1.0" encoding="utf-8"?>
<ISIF_LSC_xml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <dcc_name>isif_lsc</dcc_name>
    <dcc_header>
        <camera_module_id>     10640 </camera_module_id>
        <dcc_descriptor_id>    2 </dcc_descriptor_id>
        <algorithm_vendor_id>  1 </algorithm_vendor_id>
        <tunning_tool_version> 0 </tunning_tool_version>
    </dcc_header>
    <!--=======================================================================-->
    <typedef>
        <isif_lsc_dcc_descriptor_t type="struct">
            <enable type="uint8"> </enable> <!-- enable/disable isif 2d lsc correction: 0,1 -->
            <use_calib type="uint16"> </use_calib>
            <lsc_hsize type="uint16"> </lsc_hsize> <!-- input image horizontal size: U14 -->
            <lsc_vsize type="uint16"> </lsc_vsize> <!-- input image vertical size: U14 -->
            <hdirection_data_offset type="uint16"> </hdirection_data_offset> <!-- horizontal direction data offset: U14 -->
            <vdirection_data_offset type="uint16"> </vdirection_data_offset> <!-- vertical direction data offset: U14 -->
            <hposin_paxel type="uint8"> </hposin_paxel> <!-- init_x (horizontal position in the paxel): U7 -->
            <vposin_paxel type="uint8"> </vposin_paxel> <!-- init_y (vertical position in the paxel): U7 -->
            <pax_height type="uint8"> </pax_height> <!-- paxel_height = 2^pax_height: U3 -->
            <pax_length type="uint8"> </pax_length> <!-- paxel_width = 2^pax_length: U3 -->
            <gain_format type="uint8"> </gain_format> <!-- lsc gain fixed-point format enum: U3 -->
            <offset_scaling_factor type="uint8"> </offset_scaling_factor> <!-- offset scale factor, a: U8Q7 -->
            <offset_shift_value type="int8"> </offset_shift_value> <!-- offset shift value, T: S8 -->
            <offset_enable type="uint8"> </offset_enable> <!-- enable/disable isif 2d offset map: 0,1 -->
            <gain_table_size type="uint16"> </gain_table_size> <!-- size = (ceil( (INIT_X + IMG_WIDTH) / (2^M) ) + 1) * (ceil( (INIT_Y + IMG_HEIGHT) / (2^N) ) + 1) * 4 (bytes) -->
            <lsc_table type="uint8*"> </lsc_table> <!-- lsc gain table -->
            <offset_table_size type="uint16"> </offset_table_size> <!-- size = (ceil( (INIT_X + IMG_WIDTH) / (2^M) ) + 1) * (ceil( (INIT_Y + IMG_HEIGHT) / (2^N) ) + 1) * 4 (bytes) -->
            <offset_table type="uint8*"> </offset_table> <!-- lsc offset table -->
        </isif_lsc_dcc_descriptor_t>
    </typedef>
    <!--=======================================================================-->

    <use_case val="1023">
        <n-space>

            <region0 class="0">
                <colortemperature val="2" min="0" max="20000">  </colortemperature>
                <exposure val="1" min="0" max="10000000">  </exposure>
                <gain val="0" min="0" max="1024">  </gain>
            </region0>

        </n-space>

        <parameter_package>
            <isif_lsc_dcc type="isif_lsc_dcc_descriptor_t">
            {
                0, // enable
                0, // use_calib
                1280, // lsc_hsize
                720, // lsc_vsize
                0, // hdirection_data_offset
                0, // vdirection_data_offset
                0, // hposin_paxel
                0, // vposin_paxel
                6, // pax_height
                6, // pax_length
                5, // gain_format
                0, // offset_scaling_factor
                0, // offset_shift_value
                0, // offset_enable
                1092, // gain_table_size
                <!-- tuned in China for Maxel lens -->
                {
255 255 255 255 209 209 209 209 156 156 156 156 115 115 115 115 85 85 85 85 64 64 64 64 50 50 50 50 40 40 40 40 33 33 33 33 30 30 30 30 29 29 29 29 30 30 30 30 33 33 33 33 40 40 40 40 50 50 50 50 64 64 64 64 85 85 85 85 115 115 115 115 156 156 156 156 209 209 209 209 255 255 255 255
235 235 235 235 177 177 177 177 127 127 127 127 91 91 91 91 65 65 65 65 48 48 48 48 35 35 35 35 27 27 27 27 22 22 22 22 19 19 19 19 18 18 18 18 19 19 19 19 22 22 22 22 27 27 27 27 35 35 35 35 48 48 48 48 65 65 65 65 91 91 91 91 127 127 127 127 177 177 177 177 235 235 235 235
210 210 210 210 152 152 152 152 106 106 106 106 74 74 74 74 52 52 52 52 36 36 36 36 26 26 26 26 18 18 18 18 14 14 14 14 11 11 11 11 10 10 10 10 11 11 11 11 14 14 14 14 18 18 18 18 26 26 26 26 36 36 36 36 52 52 52 52 74 74 74 74 106 106 106 106 152 152 152 152 210 210 210 210
191 191 191 191 134 134 134 134 92 92 92 92 63 63 63 63 43 43 43 43 29 29 29 29 19 19 19 19 13 13 13 13 8 8 8 8 6 6 6 6 5 5 5 5 6 6 6 6 8 8 8 8 13 13 13 13 19 19 19 19 29 29 29 29 43 43 43 43 63 63 63 63 92 92 92 92 134 134 134 134 191 191 191 191
177 177 177 177 122 122 122 122 83 83 83 83 56 56 56 56 37 37 37 37 24 24 24 24 15 15 15 15 9 9 9 9 5 5 5 5 3 3 3 3 2 2 2 2 3 3 3 3 5 5 5 5 9 9 9 9 15 15 15 15 24 24 24 24 37 37 37 37 56 56 56 56 83 83 83 83 122 122 122 122 177 177 177 177
170 170 170 170 117 117 117 117 78 78 78 78 52 52 52 52 34 34 34 34 22 22 22 22 13 13 13 13 7 7 7 7 3 3 3 3 1 1 1 1 0 0 0 0 1 1 1 1 3 3 3 3 7 7 7 7 13 13 13 13 22 22 22 22 34 34 34 34 52 52 52 52 78 78 78 78 117 117 117 117 170 170 170 170
170 170 170 170 116 116 116 116 78 78 78 78 52 52 52 52 34 34 34 34 21 21 21 21 13 13 13 13 7 7 7 7 3 3 3 3 1 1 1 1 0 0 0 0 1 1 1 1 3 3 3 3 7 7 7 7 13 13 13 13 21 21 21 21 34 34 34 34 52 52 52 52 78 78 78 78 116 116 116 116 170 170 170 170
175 175 175 175 120 120 120 120 81 81 81 81 55 55 55 55 36 36 36 36 23 23 23 23 14 14 14 14 8 8 8 8 4 4 4 4 2 2 2 2 1 1 1 1 2 2 2 2 4 4 4 4 8 8 8 8 14 14 14 14 23 23 23 23 36 36 36 36 55 55 55 55 81 81 81 81 120 120 120 120 175 175 175 175
187 187 187 187 130 130 130 130 89 89 89 89 61 61 61 61 41 41 41 41 27 27 27 27 18 18 18 18 11 11 11 11 7 7 7 7 5 5 5 5 4 4 4 4 5 5 5 5 7 7 7 7 11 11 11 11 18 18 18 18 27 27 27 27 41 41 41 41 61 61 61 61 89 89 89 89 130 130 130 130 187 187 187 187
205 205 205 205 146 146 146 146 102 102 102 102 71 71 71 71 49 49 49 49 34 34 34 34 24 24 24 24 17 17 17 17 12 12 12 12 10 10 10 10 9 9 9 9 10 10 10 10 12 12 12 12 17 17 17 17 24 24 24 24 34 34 34 34 49 49 49 49 71 71 71 71 102 102 102 102 146 146 146 146 205 205 205 205
229 229 229 229 170 170 170 170 121 121 121 121 86 86 86 86 62 62 62 62 44 44 44 44 33 33 33 33 25 25 25 25 19 19 19 19 16 16 16 16 16 16 16 16 16 16 16 16 19 19 19 19 25 25 25 25 33 33 33 33 44 44 44 44 62 62 62 62 86 86 86 86 121 121 121 121 170 170 170 170 229 229 229 229
255 255 255 255 200 200 200 200 148 148 148 148 108 108 108 108 79 79 79 79 59 59 59 59 46 46 46 46 36 36 36 36 30 30 30 30 27 27 27 27 25 25 25 25 27 27 27 27 30 30 30 30 36 36 36 36 46 46 46 46 59 59 59 59 79 79 79 79 108 108 108 108 148 148 148 148 200 200 200 200 255 255 255 255
255 255 255 255 236 236 236 236 184 184 184 184 139 139 139 139 105 105 105 105 81 81 81 81 64 64 64 64 53 53 53 53 45 45 45 45 41 41 41 41 40 40 40 40 41 41 41 41 45 45 45 45 53 53 53 53 64 64 64 64 81 81 81 81 105 105 105 105 139 139 139 139 184 184 184 184 236 236 236 236 255 255 255 255
}
, // lsc_table
                1092, // offset_table_size
                NULL  // offset_table
            }
            </isif_lsc_dcc>
        </parameter_package>

    </use_case>

    <!--=====================================================================-->
</ISIF_LSC_xml>
