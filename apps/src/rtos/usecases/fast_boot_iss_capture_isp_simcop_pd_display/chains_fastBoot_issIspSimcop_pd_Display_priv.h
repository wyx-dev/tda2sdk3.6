/******************************************************************************
Copyright (c) [2012 - 2017] Texas Instruments Incorporated

All rights reserved not granted herein.

Limited License.

 Texas Instruments Incorporated grants a world-wide, royalty-free, non-exclusive
 license under copyrights and patents it now or hereafter owns or controls to
 make,  have made, use, import, offer to sell and sell ("Utilize") this software
 subject to the terms herein.  With respect to the foregoing patent license,
 such license is granted  solely to the extent that any such patent is necessary
 to Utilize the software alone.  The patent license shall not apply to any
 combinations which include this software, other than combinations with devices
 manufactured by or for TI ("TI Devices").  No hardware patent is licensed
 hereunder.

 Redistributions must preserve existing copyright notices and reproduce this
 license (including the above copyright notice and the disclaimer and
 (if applicable) source code license limitations below) in the documentation
 and/or other materials provided with the distribution

 Redistribution and use in binary form, without modification, are permitted
 provided that the following conditions are met:

 * No reverse engineering, decompilation, or disassembly of this software
   is permitted with respect to any software provided in binary form.

 * Any redistribution and use are licensed by TI for use only with TI Devices.

 * Nothing shall obligate TI to provide you with source code for the software
   licensed and provided to you in object code.

 If software source code is provided to you, modification and redistribution of
 the source code are permitted provided that the following conditions are met:

 * Any redistribution and use of the source code, including any resulting
   derivative works, are licensed by TI for use only with TI Devices.

 * Any redistribution and use of any object code compiled from the source code
   and any resulting derivative works, are licensed by TI for use only with TI
   Devices.

 Neither the name of Texas Instruments Incorporated nor the names of its
 suppliers may be used to endorse or promote products derived from this software
 without specific prior written permission.

 DISCLAIMER.

 THIS SOFTWARE IS PROVIDED BY TI AND TI’S LICENSORS "AS IS" AND ANY EXPRESS OR
 IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 IN NO EVENT SHALL TI AND TI’S LICENSORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
******************************************************************************/

/*
*******************************************************************************
*
* IMPORTANT NOTE:
*  This file is AUTO-GENERATED by Vision SDK use case generation tool
*
*******************************************************************************
*/

#ifndef _chains_fastBoot_issIspSimcop_pd_Display_H_
#define _chains_fastBoot_issIspSimcop_pd_Display_H_

#include <include/link_api/system.h>
#include <include/link_api/issCaptureLink.h>
#include <include/link_api/issM2mIspLink.h>
#include <src/rtos/iss/include/algorithmLink_issAewb.h>
#include <include/link_api/issM2mSimcopLink.h>
#include <include/link_api/issM2mResizerLink.h>
#include <include/link_api/dupLink.h>
#include <include/alglink_api/algorithmLink_featurePlaneComputation.h>
#include <include/alglink_api/algorithmLink_objectDetection.h>
#include <include/link_api/ipcLink.h>
#include <include/link_api/syncLink.h>
#include <include/alglink_api/algorithmLink_objectDraw.h>
#include <include/link_api/gateLink.h>
#include <include/link_api/mergeLink.h>
#include <include/link_api/grpxSrcLink.h>
#include <include/link_api/displayLink.h>
#include <src/include/chains_common.h>
#include <src/rtos/iss/include/iss_utils.h>
#include <src/rtos/iss/include/app_util_iss.h>

typedef struct {
       UInt32    IssCaptureLinkID;
       UInt32    IssM2mIspLinkID;
       UInt32    Alg_IssAewbLinkID;
       UInt32    IssM2mSimcopLinkID;
       UInt32    IssM2mRszLinkID;
       UInt32    Dup_captureLinkID;
       UInt32    Gate_algFeatureComputeLinkID;
       UInt32    IPCOut_IPU1_0_EVE1_0LinkID;
       UInt32    IPCIn_EVE1_IPU1_0_0LinkID;
       UInt32    Alg_FeaturePlaneComputationLinkID;
       UInt32    IPCOut_EVE1_DSP1_0LinkID;
       UInt32    IPCIn_DSP1_EVE1_0LinkID;
       UInt32    Alg_ObjectDetectionLinkID;
       UInt32    IPCOut_DSP1_IPU1_0_0LinkID;
       UInt32    IPCIn_IPU1_0_DSP1_0LinkID;
       UInt32    Gate_algCaptureLinkID;
       UInt32    Merge_algLinkID;
       UInt32    Sync_algLinkID;
       UInt32    Alg_ObjectDrawLinkID;
       UInt32    Gate_algDrawLinkID;
       UInt32    Merge_displayLinkID;
       UInt32    Display_VideoLinkID;
       UInt32    GrpxSrcLinkID;
       UInt32    Display_GrpxLinkID;

       IssCaptureLink_CreateParams             IssCapturePrm;
       IssM2mIspLink_CreateParams              IssM2mIspPrm;
       AlgorithmLink_IssAewbCreateParams       Alg_IssAewbPrm;
       IssM2mSimcopLink_CreateParams           IssM2mSimcopPrm;
       IssRszLink_CreateParams                 IssM2mRszPrm;
       DupLink_CreateParams                    Dup_capturePrm;
       GateLink_CreateParams                   Gate_algFeatureComputePrm;
       IpcLink_CreateParams                    IPCOut_IPU1_0_EVE1_0Prm;
       IpcLink_CreateParams                    IPCIn_EVE1_IPU1_0_0Prm;
       AlgorithmLink_FeaturePlaneComputationCreateParams Alg_FeaturePlaneComputationPrm;
       IpcLink_CreateParams                    IPCOut_EVE1_DSP1_0Prm;
       IpcLink_CreateParams                    IPCIn_DSP1_EVE1_0Prm;
       AlgorithmLink_ObjectDetectionCreateParams Alg_ObjectDetectionPrm;
       IpcLink_CreateParams                    IPCOut_DSP1_IPU1_0_0Prm;
       IpcLink_CreateParams                    IPCIn_IPU1_0_DSP1_0Prm;
       GateLink_CreateParams                   Gate_algCapturePrm;
       MergeLink_CreateParams                  Merge_algPrm;
       SyncLink_CreateParams                   Sync_algPrm;
       AlgorithmLink_ObjectDrawCreateParams    Alg_ObjectDrawPrm;
       GateLink_CreateParams                   Gate_algDrawPrm;
       MergeLink_CreateParams                  Merge_displayPrm;
       DisplayLink_CreateParams                Display_VideoPrm;
       GrpxSrcLink_CreateParams                GrpxSrcPrm;
       DisplayLink_CreateParams                Display_GrpxPrm;
} chains_fastBoot_issIspSimcop_pd_DisplayObj;

/**
 *******************************************************************************
 *
 *  \brief  SingleCameraFrameCopyObject
 *
 *        This structure contains all the LinksId's and create Params.
 *        The same is passed to all create, start, stop functions.
 *
 *******************************************************************************
*/
typedef struct {

    chains_fastBoot_issIspSimcop_pd_DisplayObj  ucObj;

    IssIspConfigurationParameters               ispConfig;

    IssM2mSimcopLink_ConfigParams               simcopConfig;
    vpsissldcConfig_t                           ldcCfg;
    vpsissvtnfConfig_t                          vtnfCfg;
    AppUtils_Obj                                appObjPrms;

    UInt32                                      captureOutWidth;
    UInt32                                      captureOutHeight;
    UInt32                                      displayWidth;
    UInt32                                      displayHeight;

    Chains_Ctrl                                *chainsCfg;

    IssM2mSimcopLink_OperatingMode              simcopMode;
    Bool                                        bypassVtnf;
    Bool                                        bypassLdc;

    UInt32                                      analyticsState;

    IssSensor_CreateParams                      sensorCreatePrms;
    Ptr                                         sensorHandle;
    IssSensor_AeParams                          sensorAePrms;
    IssSensor_ExposureParams                    sensorExpPrms;

    IssSensor_Info                              sensorInfo;
    ChainsCommon_IssSensorIf                    sensorIntfInfo;
    IssAewbAlgOutParams                         issAewbPrms;
} chains_fastBoot_issIspSimcop_pd_DisplayAppObj;

Void chains_fastBoot_issIspSimcop_pd_Display_SetLinkId(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_ResetLinkPrms(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_SetPrms(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_ConnectLinks(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Create_UcEarly(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj, Void *appObj);
Int32 chains_fastBoot_issIspSimcop_pd_Display_Create_UcLate(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj, Void *appObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Start_UcEarly(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Start_UcLate(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Delete_UcLate(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Stop_UcLate(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_CreateAndStart_GrpxSrc(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Stop(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Int32 chains_fastBoot_issIspSimcop_pd_Display_Delete(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_printBufferStatistics(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_printStatistics(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_SetAppPrms(chains_fastBoot_issIspSimcop_pd_DisplayObj *pObj, Void *appObj);

Void chains_fastBoot_issIspSimcop_pd_Display_StartApp_UcLate(chains_fastBoot_issIspSimcop_pd_DisplayAppObj *pObj);

Void chains_fastBoot_issIspSimcop_pd_Display_StopAndDeleteApp_UcLate(chains_fastBoot_issIspSimcop_pd_DisplayAppObj *pObj);

#endif /* _chains_fastBoot_issIspSimcop_pd_Display_H_ */
