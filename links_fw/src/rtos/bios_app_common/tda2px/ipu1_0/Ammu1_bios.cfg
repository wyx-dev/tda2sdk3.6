
/*******************************************************************************
*  file name: Ammu1.cfg
*  Set IPU1 (core 0 and core 1) AMMU configuration
*
*******************************************************************************/

/******************************************************************************
 *
 * NOTE:
 *
 * Region 0x42000000 to 0x44000000 (32MB) is BitBand region in IPU.
 *
 * Any L3/L4 peripherals mapped to this region must be accsssed via virtual 
 * address on IPU side.
 *
 * On TDA2xx below peripherals fall in this BitBand region
 *   - EVE1/2/3/4 MBOX0/1
 *   - System EDMA
 *
 * Further IPC package by default acceses System mailbox's on IPU side via 
 * virtual address's
 *
 * In AMMU config, one large page can be used to do this virutal to physical 
 * address mapping as shown below,
 *
 *   Virutal Address          Physical Address
 *  0x60000000:0x7FFFFFFF -> 0x40000000:0x5FFFFFFF   (512MB)
 *
 * However this wastes a large page which can be used for other purposes 
 * Ex, mapping GPMC NOR memory of 64MB.
 *
 * Hence AMMU config below maps multiple small and medium pages to specific
 * address ranges of the required peripherals.
 *
 ******************************************************************************
 */ 

function init()
{
    var Program = xdc.useModule('xdc.cfg.Program');
    var Cache = xdc.useModule('ti.sysbios.hal.unicache.Cache');
    Cache.enableCache = true;

    var AMMU = xdc.useModule('ti.sysbios.hal.ammu.AMMU');
    AMMU.configureAmmu = true;

    /*********************** Medium Pages *************************/

    /* ISS */
    var entry = AMMU.mediumPages[0];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x62200000;
    entry.translatedAddress = 0x42200000;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.size = AMMU.Medium_256K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_writePolicy = AMMU.WritePolicy_WRITE_THROUGH;
    entry.L1_allocate    = AMMU.AllocatePolicy_NON_ALLOCATE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* ISS */
    var entry = AMMU.mediumPages[1];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x62240000;
    entry.translatedAddress = 0x42240000;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.size = AMMU.Medium_256K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_writePolicy = AMMU.WritePolicy_WRITE_THROUGH;
    entry.L1_allocate    = AMMU.AllocatePolicy_NON_ALLOCATE;
    entry.L1_posted = AMMU.PostedPolicy_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /*********************** Small Pages *************************/

    /* EVE1 MBOX0 */
    var entry = AMMU.smallPages[2];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x62088000;
    entry.translatedAddress = 0x42088000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* EVE1 MBOX1 */
    var entry = AMMU.smallPages[3];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x6208C000;
    entry.translatedAddress = 0x4208C000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* EVE2 MBOX0 */
    var entry = AMMU.smallPages[4];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x62188000;
    entry.translatedAddress = 0x42188000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* EVE2 MBOX1 */
    var entry = AMMU.smallPages[5];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x6218C000;
    entry.translatedAddress = 0x4218C000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* System EDMA TPCC */
    var entry = AMMU.smallPages[6];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x63300000;
    entry.translatedAddress = 0x43300000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* System EDMA TPCC */
    var entry = AMMU.smallPages[7];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x63304000;
    entry.translatedAddress = 0x43304000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* System Mailbox 5, 6 */
    var entry = AMMU.smallPages[8];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x68840000;
    entry.translatedAddress = 0x48840000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;
    
    /* System Mailbox 7, 8 */
    var entry = AMMU.smallPages[9];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x68844000;
    entry.translatedAddress = 0x48844000;
    entry.size = AMMU.Small_16K;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /*********************** Large Pages *************************/
    var entry = AMMU.largePages[0];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x40000000;
    entry.translatedAddress = 0x40000000;
    entry.size = AMMU.Large_512M;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* map program code/data memory into ammu (cacheable) */
    var entry = AMMU.largePages[1];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x80000000;
    entry.translatedAddress = 0x80000000;
    entry.size = AMMU.Large_512M;
    entry.L1_cacheable = AMMU.CachePolicy_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_POSTED;
    entry.L1_allocate = AMMU.AllocatePolicy_ALLOCATE;
    entry.L1_writePolicy = AMMU.WritePolicy_WRITE_BACK;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;

    /* map SR_0 data memory into ammu (non-cacheable) */
    var entry = AMMU.largePages[2];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0xA0000000;
    entry.translatedAddress = 0x80000000;
    entry.size = AMMU.Large_512M;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;
/*
    var entry = AMMU.largePages[3];
    entry.pageEnabled = AMMU.Enable_YES;
    entry.translationEnabled = AMMU.Enable_YES;
    entry.logicalAddress = 0x60000000;
    entry.translatedAddress = 0x40000000;
    entry.size = AMMU.Large_512M;
    entry.L1_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L1_posted = AMMU.PostedPolicy_NON_POSTED;
    entry.L2_cacheable = AMMU.CachePolicy_NON_CACHEABLE;
    entry.L2_posted = AMMU.PostedPolicy_NON_POSTED;
*/
}

